// This file was automatically generated, do not edit
syntax = "proto2";
package mavlink.common;
// id: 0 Heartbeat
message Heartbeat {
  required uint32 custom_mode = 1;
  required uint32 mavtype = 2;
  required uint32 autopilot = 3;
  required uint32 base_mode = 4;
  required uint32 system_status = 5;
  required uint32 mavlink_version = 6;
}
// id: 1 SysStatus
message SysStatus {
  required uint32 onboard_control_sensors_present = 1;
  required uint32 onboard_control_sensors_enabled = 2;
  required uint32 onboard_control_sensors_health = 3;
  required uint32 load = 4;
  required uint32 voltage_battery = 5;
  required int32 current_battery = 6;
  required uint32 drop_rate_comm = 7;
  required uint32 errors_comm = 8;
  required uint32 errors_count1 = 9;
  required uint32 errors_count2 = 10;
  required uint32 errors_count3 = 11;
  required uint32 errors_count4 = 12;
  required int32 battery_remaining = 13;
}
// id: 2 SystemTime
message SystemTime {
  required uint64 time_unix_usec = 1;
  required uint32 time_boot_ms = 2;
}
// id: 4 Ping
message Ping {
  required uint64 time_usec = 1;
  required uint32 seq = 2;
  required uint32 target_system = 3;
  required uint32 target_component = 4;
}
// id: 5 ChangeOperatorControl
message ChangeOperatorControl {
  required uint32 target_system = 1;
  required uint32 control_request = 2;
  required uint32 version = 3;
  repeated bytes passkey = 4;
}
// id: 6 ChangeOperatorControlAck
message ChangeOperatorControlAck {
  required uint32 gcs_system_id = 1;
  required uint32 control_request = 2;
  required uint32 ack = 3;
}
// id: 7 AuthKey
message AuthKey { repeated bytes key = 1; }
// id: 11 SetMode
message SetMode {
  required uint32 custom_mode = 1;
  required uint32 target_system = 2;
  required uint32 base_mode = 3;
}
// id: 20 ParamRequestRead
message ParamRequestRead {
  required int32 param_index = 1;
  required uint32 target_system = 2;
  required uint32 target_component = 3;
  repeated bytes param_id = 4;
}
// id: 21 ParamRequestList
message ParamRequestList {
  required uint32 target_system = 1;
  required uint32 target_component = 2;
}
// id: 22 ParamValue
message ParamValue {
  required float param_value = 1;
  required uint32 param_count = 2;
  required uint32 param_index = 3;
  repeated bytes param_id = 4;
  required uint32 param_type = 5;
}
// id: 23 ParamSet
message ParamSet {
  required float param_value = 1;
  required uint32 target_system = 2;
  required uint32 target_component = 3;
  repeated bytes param_id = 4;
  required uint32 param_type = 5;
}
// id: 24 GpsRawInt
message GpsRawInt {
  required uint64 time_usec = 1;
  required int32 lat = 2;
  required int32 lon = 3;
  required int32 alt = 4;
  required uint32 eph = 5;
  required uint32 epv = 6;
  required uint32 vel = 7;
  required uint32 cog = 8;
  required uint32 fix_type = 9;
  required uint32 satellites_visible = 10;
}
// id: 25 GpsStatus
message GpsStatus {
  required uint32 satellites_visible = 1;
  repeated bytes satellite_prn = 2;
  repeated bytes satellite_used = 3;
  repeated bytes satellite_elevation = 4;
  repeated bytes satellite_azimuth = 5;
  repeated bytes satellite_snr = 6;
}
// id: 26 ScaledImu
message ScaledImu {
  required uint32 time_boot_ms = 1;
  required int32 xacc = 2;
  required int32 yacc = 3;
  required int32 zacc = 4;
  required int32 xgyro = 5;
  required int32 ygyro = 6;
  required int32 zgyro = 7;
  required int32 xmag = 8;
  required int32 ymag = 9;
  required int32 zmag = 10;
}
// id: 27 RawImu
message RawImu {
  required uint64 time_usec = 1;
  required int32 xacc = 2;
  required int32 yacc = 3;
  required int32 zacc = 4;
  required int32 xgyro = 5;
  required int32 ygyro = 6;
  required int32 zgyro = 7;
  required int32 xmag = 8;
  required int32 ymag = 9;
  required int32 zmag = 10;
}
// id: 28 RawPressure
message RawPressure {
  required uint64 time_usec = 1;
  required int32 press_abs = 2;
  required int32 press_diff1 = 3;
  required int32 press_diff2 = 4;
  required int32 temperature = 5;
}
// id: 29 ScaledPressure
message ScaledPressure {
  required uint32 time_boot_ms = 1;
  required float press_abs = 2;
  required float press_diff = 3;
  required int32 temperature = 4;
}
// id: 30 Attitude
message Attitude {
  required uint32 time_boot_ms = 1;
  required float roll = 2;
  required float pitch = 3;
  required float yaw = 4;
  required float rollspeed = 5;
  required float pitchspeed = 6;
  required float yawspeed = 7;
}
// id: 31 AttitudeQuaternion
message AttitudeQuaternion {
  required uint32 time_boot_ms = 1;
  required float q1 = 2;
  required float q2 = 3;
  required float q3 = 4;
  required float q4 = 5;
  required float rollspeed = 6;
  required float pitchspeed = 7;
  required float yawspeed = 8;
}
// id: 32 LocalPositionNed
message LocalPositionNed {
  required uint32 time_boot_ms = 1;
  required float x = 2;
  required float y = 3;
  required float z = 4;
  required float vx = 5;
  required float vy = 6;
  required float vz = 7;
}
// id: 33 GlobalPositionInt
message GlobalPositionInt {
  required uint32 time_boot_ms = 1;
  required int32 lat = 2;
  required int32 lon = 3;
  required int32 alt = 4;
  required int32 relative_alt = 5;
  required int32 vx = 6;
  required int32 vy = 7;
  required int32 vz = 8;
  required uint32 hdg = 9;
}
// id: 34 RcChannelsScaled
message RcChannelsScaled {
  required uint32 time_boot_ms = 1;
  required int32 chan1_scaled = 2;
  required int32 chan2_scaled = 3;
  required int32 chan3_scaled = 4;
  required int32 chan4_scaled = 5;
  required int32 chan5_scaled = 6;
  required int32 chan6_scaled = 7;
  required int32 chan7_scaled = 8;
  required int32 chan8_scaled = 9;
  required uint32 port = 10;
  required uint32 rssi = 11;
}
// id: 35 RcChannelsRaw
message RcChannelsRaw {
  required uint32 time_boot_ms = 1;
  required uint32 chan1_raw = 2;
  required uint32 chan2_raw = 3;
  required uint32 chan3_raw = 4;
  required uint32 chan4_raw = 5;
  required uint32 chan5_raw = 6;
  required uint32 chan6_raw = 7;
  required uint32 chan7_raw = 8;
  required uint32 chan8_raw = 9;
  required uint32 port = 10;
  required uint32 rssi = 11;
}
// id: 36 ServoOutputRaw
message ServoOutputRaw {
  required uint32 time_usec = 1;
  required uint32 servo1_raw = 2;
  required uint32 servo2_raw = 3;
  required uint32 servo3_raw = 4;
  required uint32 servo4_raw = 5;
  required uint32 servo5_raw = 6;
  required uint32 servo6_raw = 7;
  required uint32 servo7_raw = 8;
  required uint32 servo8_raw = 9;
  required uint32 port = 10;
}
// id: 37 MissionRequestPartialList
message MissionRequestPartialList {
  required int32 start_index = 1;
  required int32 end_index = 2;
  required uint32 target_system = 3;
  required uint32 target_component = 4;
}
// id: 38 MissionWritePartialList
message MissionWritePartialList {
  required int32 start_index = 1;
  required int32 end_index = 2;
  required uint32 target_system = 3;
  required uint32 target_component = 4;
}
// id: 39 MissionItem
message MissionItem {
  required float param1 = 1;
  required float param2 = 2;
  required float param3 = 3;
  required float param4 = 4;
  required float x = 5;
  required float y = 6;
  required float z = 7;
  required uint32 seq = 8;
  required uint32 command = 9;
  required uint32 target_system = 10;
  required uint32 target_component = 11;
  required uint32 frame = 12;
  required uint32 current = 13;
  required uint32 autocontinue = 14;
}
// id: 40 MissionRequest
message MissionRequest {
  required uint32 seq = 1;
  required uint32 target_system = 2;
  required uint32 target_component = 3;
}
// id: 41 MissionSetCurrent
message MissionSetCurrent {
  required uint32 seq = 1;
  required uint32 target_system = 2;
  required uint32 target_component = 3;
}
// id: 42 MissionCurrent
message MissionCurrent { required uint32 seq = 1; }
// id: 43 MissionRequestList
message MissionRequestList {
  required uint32 target_system = 1;
  required uint32 target_component = 2;
}
// id: 44 MissionCount
message MissionCount {
  required uint32 count = 1;
  required uint32 target_system = 2;
  required uint32 target_component = 3;
}
// id: 45 MissionClearAll
message MissionClearAll {
  required uint32 target_system = 1;
  required uint32 target_component = 2;
}
// id: 46 MissionItemReached
message MissionItemReached { required uint32 seq = 1; }
// id: 47 MissionAck
message MissionAck {
  required uint32 target_system = 1;
  required uint32 target_component = 2;
  required uint32 mavtype = 3;
}
// id: 48 SetGpsGlobalOrigin
message SetGpsGlobalOrigin {
  required int32 latitude = 1;
  required int32 longitude = 2;
  required int32 altitude = 3;
  required uint32 target_system = 4;
}
// id: 49 GpsGlobalOrigin
message GpsGlobalOrigin {
  required int32 latitude = 1;
  required int32 longitude = 2;
  required int32 altitude = 3;
}
// id: 50 ParamMapRc
message ParamMapRc {
  required float param_value0 = 1;
  required float scale = 2;
  required float param_value_min = 3;
  required float param_value_max = 4;
  required int32 param_index = 5;
  required uint32 target_system = 6;
  required uint32 target_component = 7;
  repeated bytes param_id = 8;
  required uint32 parameter_rc_channel_index = 9;
}
// id: 54 SafetySetAllowedArea
message SafetySetAllowedArea {
  required float p1x = 1;
  required float p1y = 2;
  required float p1z = 3;
  required float p2x = 4;
  required float p2y = 5;
  required float p2z = 6;
  required uint32 target_system = 7;
  required uint32 target_component = 8;
  required uint32 frame = 9;
}
// id: 55 SafetyAllowedArea
message SafetyAllowedArea {
  required float p1x = 1;
  required float p1y = 2;
  required float p1z = 3;
  required float p2x = 4;
  required float p2y = 5;
  required float p2z = 6;
  required uint32 frame = 7;
}
// id: 61 AttitudeQuaternionCov
message AttitudeQuaternionCov {
  required uint32 time_boot_ms = 1;
  repeated float q = 2;
  required float rollspeed = 3;
  required float pitchspeed = 4;
  required float yawspeed = 5;
  repeated float covariance = 6;
}
// id: 62 NavControllerOutput
message NavControllerOutput {
  required float nav_roll = 1;
  required float nav_pitch = 2;
  required float alt_error = 3;
  required float aspd_error = 4;
  required float xtrack_error = 5;
  required int32 nav_bearing = 6;
  required int32 target_bearing = 7;
  required uint32 wp_dist = 8;
}
// id: 63 GlobalPositionIntCov
message GlobalPositionIntCov {
  required uint64 time_utc = 1;
  required uint32 time_boot_ms = 2;
  required int32 lat = 3;
  required int32 lon = 4;
  required int32 alt = 5;
  required int32 relative_alt = 6;
  required float vx = 7;
  required float vy = 8;
  required float vz = 9;
  repeated float covariance = 10;
  required uint32 estimator_type = 11;
}
// id: 64 LocalPositionNedCov
message LocalPositionNedCov {
  required uint64 time_utc = 1;
  required uint32 time_boot_ms = 2;
  required float x = 3;
  required float y = 4;
  required float z = 5;
  required float vx = 6;
  required float vy = 7;
  required float vz = 8;
  required float ax = 9;
  required float ay = 10;
  required float az = 11;
  repeated float covariance = 12;
  required uint32 estimator_type = 13;
}
// id: 65 RcChannels
message RcChannels {
  required uint32 time_boot_ms = 1;
  required uint32 chan1_raw = 2;
  required uint32 chan2_raw = 3;
  required uint32 chan3_raw = 4;
  required uint32 chan4_raw = 5;
  required uint32 chan5_raw = 6;
  required uint32 chan6_raw = 7;
  required uint32 chan7_raw = 8;
  required uint32 chan8_raw = 9;
  required uint32 chan9_raw = 10;
  required uint32 chan10_raw = 11;
  required uint32 chan11_raw = 12;
  required uint32 chan12_raw = 13;
  required uint32 chan13_raw = 14;
  required uint32 chan14_raw = 15;
  required uint32 chan15_raw = 16;
  required uint32 chan16_raw = 17;
  required uint32 chan17_raw = 18;
  required uint32 chan18_raw = 19;
  required uint32 chancount = 20;
  required uint32 rssi = 21;
}
// id: 66 RequestDataStream
message RequestDataStream {
  required uint32 req_message_rate = 1;
  required uint32 target_system = 2;
  required uint32 target_component = 3;
  required uint32 req_stream_id = 4;
  required uint32 start_stop = 5;
}
// id: 67 DataStream
message DataStream {
  required uint32 message_rate = 1;
  required uint32 stream_id = 2;
  required uint32 on_off = 3;
}
// id: 69 ManualControl
message ManualControl {
  required int32 x = 1;
  required int32 y = 2;
  required int32 z = 3;
  required int32 r = 4;
  required uint32 buttons = 5;
  required uint32 target = 6;
}
// id: 70 RcChannelsOverride
message RcChannelsOverride {
  required uint32 chan1_raw = 1;
  required uint32 chan2_raw = 2;
  required uint32 chan3_raw = 3;
  required uint32 chan4_raw = 4;
  required uint32 chan5_raw = 5;
  required uint32 chan6_raw = 6;
  required uint32 chan7_raw = 7;
  required uint32 chan8_raw = 8;
  required uint32 target_system = 9;
  required uint32 target_component = 10;
}
// id: 73 MissionItemInt
message MissionItemInt {
  required float param1 = 1;
  required float param2 = 2;
  required float param3 = 3;
  required float param4 = 4;
  required int32 x = 5;
  required int32 y = 6;
  required float z = 7;
  required uint32 seq = 8;
  required uint32 command = 9;
  required uint32 target_system = 10;
  required uint32 target_component = 11;
  required uint32 frame = 12;
  required uint32 current = 13;
  required uint32 autocontinue = 14;
}
// id: 74 VfrHud
message VfrHud {
  required float airspeed = 1;
  required float groundspeed = 2;
  required float alt = 3;
  required float climb = 4;
  required int32 heading = 5;
  required uint32 throttle = 6;
}
// id: 75 CommandInt
message CommandInt {
  required float param1 = 1;
  required float param2 = 2;
  required float param3 = 3;
  required float param4 = 4;
  required int32 x = 5;
  required int32 y = 6;
  required float z = 7;
  required uint32 command = 8;
  required uint32 target_system = 9;
  required uint32 target_component = 10;
  required uint32 frame = 11;
  required uint32 current = 12;
  required uint32 autocontinue = 13;
}
// id: 76 CommandLong
message CommandLong {
  required float param1 = 1;
  required float param2 = 2;
  required float param3 = 3;
  required float param4 = 4;
  required float param5 = 5;
  required float param6 = 6;
  required float param7 = 7;
  required uint32 command = 8;
  required uint32 target_system = 9;
  required uint32 target_component = 10;
  required uint32 confirmation = 11;
}
// id: 77 CommandAck
message CommandAck {
  required uint32 command = 1;
  required uint32 result = 2;
}
// id: 81 ManualSetpoint
message ManualSetpoint {
  required uint32 time_boot_ms = 1;
  required float roll = 2;
  required float pitch = 3;
  required float yaw = 4;
  required float thrust = 5;
  required uint32 mode_switch = 6;
  required uint32 manual_override_switch = 7;
}
// id: 82 SetAttitudeTarget
message SetAttitudeTarget {
  required uint32 time_boot_ms = 1;
  repeated float q = 2;
  required float body_roll_rate = 3;
  required float body_pitch_rate = 4;
  required float body_yaw_rate = 5;
  required float thrust = 6;
  required uint32 target_system = 7;
  required uint32 target_component = 8;
  required uint32 type_mask = 9;
}
// id: 83 AttitudeTarget
message AttitudeTarget {
  required uint32 time_boot_ms = 1;
  repeated float q = 2;
  required float body_roll_rate = 3;
  required float body_pitch_rate = 4;
  required float body_yaw_rate = 5;
  required float thrust = 6;
  required uint32 type_mask = 7;
}
// id: 84 SetPositionTargetLocalNed
message SetPositionTargetLocalNed {
  required uint32 time_boot_ms = 1;
  required float x = 2;
  required float y = 3;
  required float z = 4;
  required float vx = 5;
  required float vy = 6;
  required float vz = 7;
  required float afx = 8;
  required float afy = 9;
  required float afz = 10;
  required float yaw = 11;
  required float yaw_rate = 12;
  required uint32 type_mask = 13;
  required uint32 target_system = 14;
  required uint32 target_component = 15;
  required uint32 coordinate_frame = 16;
}
// id: 85 PositionTargetLocalNed
message PositionTargetLocalNed {
  required uint32 time_boot_ms = 1;
  required float x = 2;
  required float y = 3;
  required float z = 4;
  required float vx = 5;
  required float vy = 6;
  required float vz = 7;
  required float afx = 8;
  required float afy = 9;
  required float afz = 10;
  required float yaw = 11;
  required float yaw_rate = 12;
  required uint32 type_mask = 13;
  required uint32 coordinate_frame = 14;
}
// id: 86 SetPositionTargetGlobalInt
message SetPositionTargetGlobalInt {
  required uint32 time_boot_ms = 1;
  required int32 lat_int = 2;
  required int32 lon_int = 3;
  required float alt = 4;
  required float vx = 5;
  required float vy = 6;
  required float vz = 7;
  required float afx = 8;
  required float afy = 9;
  required float afz = 10;
  required float yaw = 11;
  required float yaw_rate = 12;
  required uint32 type_mask = 13;
  required uint32 target_system = 14;
  required uint32 target_component = 15;
  required uint32 coordinate_frame = 16;
}
// id: 87 PositionTargetGlobalInt
message PositionTargetGlobalInt {
  required uint32 time_boot_ms = 1;
  required int32 lat_int = 2;
  required int32 lon_int = 3;
  required float alt = 4;
  required float vx = 5;
  required float vy = 6;
  required float vz = 7;
  required float afx = 8;
  required float afy = 9;
  required float afz = 10;
  required float yaw = 11;
  required float yaw_rate = 12;
  required uint32 type_mask = 13;
  required uint32 coordinate_frame = 14;
}
// id: 89 LocalPositionNedSystemGlobalOffset
message LocalPositionNedSystemGlobalOffset {
  required uint32 time_boot_ms = 1;
  required float x = 2;
  required float y = 3;
  required float z = 4;
  required float roll = 5;
  required float pitch = 6;
  required float yaw = 7;
}
// id: 90 HilState
message HilState {
  required uint64 time_usec = 1;
  required float roll = 2;
  required float pitch = 3;
  required float yaw = 4;
  required float rollspeed = 5;
  required float pitchspeed = 6;
  required float yawspeed = 7;
  required int32 lat = 8;
  required int32 lon = 9;
  required int32 alt = 10;
  required int32 vx = 11;
  required int32 vy = 12;
  required int32 vz = 13;
  required int32 xacc = 14;
  required int32 yacc = 15;
  required int32 zacc = 16;
}
// id: 91 HilControls
message HilControls {
  required uint64 time_usec = 1;
  required float roll_ailerons = 2;
  required float pitch_elevator = 3;
  required float yaw_rudder = 4;
  required float throttle = 5;
  required float aux1 = 6;
  required float aux2 = 7;
  required float aux3 = 8;
  required float aux4 = 9;
  required uint32 mode = 10;
  required uint32 nav_mode = 11;
}
// id: 92 HilRcInputsRaw
message HilRcInputsRaw {
  required uint64 time_usec = 1;
  required uint32 chan1_raw = 2;
  required uint32 chan2_raw = 3;
  required uint32 chan3_raw = 4;
  required uint32 chan4_raw = 5;
  required uint32 chan5_raw = 6;
  required uint32 chan6_raw = 7;
  required uint32 chan7_raw = 8;
  required uint32 chan8_raw = 9;
  required uint32 chan9_raw = 10;
  required uint32 chan10_raw = 11;
  required uint32 chan11_raw = 12;
  required uint32 chan12_raw = 13;
  required uint32 rssi = 14;
}
// id: 100 OpticalFlow
message OpticalFlow {
  required uint64 time_usec = 1;
  required float flow_comp_m_x = 2;
  required float flow_comp_m_y = 3;
  required float ground_distance = 4;
  required int32 flow_x = 5;
  required int32 flow_y = 6;
  required uint32 sensor_id = 7;
  required uint32 quality = 8;
}
// id: 101 GlobalVisionPositionEstimate
message GlobalVisionPositionEstimate {
  required uint64 usec = 1;
  required float x = 2;
  required float y = 3;
  required float z = 4;
  required float roll = 5;
  required float pitch = 6;
  required float yaw = 7;
}
// id: 102 VisionPositionEstimate
message VisionPositionEstimate {
  required uint64 usec = 1;
  required float x = 2;
  required float y = 3;
  required float z = 4;
  required float roll = 5;
  required float pitch = 6;
  required float yaw = 7;
}
// id: 103 VisionSpeedEstimate
message VisionSpeedEstimate {
  required uint64 usec = 1;
  required float x = 2;
  required float y = 3;
  required float z = 4;
}
// id: 104 ViconPositionEstimate
message ViconPositionEstimate {
  required uint64 usec = 1;
  required float x = 2;
  required float y = 3;
  required float z = 4;
  required float roll = 5;
  required float pitch = 6;
  required float yaw = 7;
}
// id: 105 HighresImu
message HighresImu {
  required uint64 time_usec = 1;
  required float xacc = 2;
  required float yacc = 3;
  required float zacc = 4;
  required float xgyro = 5;
  required float ygyro = 6;
  required float zgyro = 7;
  required float xmag = 8;
  required float ymag = 9;
  required float zmag = 10;
  required float abs_pressure = 11;
  required float diff_pressure = 12;
  required float pressure_alt = 13;
  required float temperature = 14;
  required uint32 fields_updated = 15;
}
// id: 106 OpticalFlowRad
message OpticalFlowRad {
  required uint64 time_usec = 1;
  required uint32 integration_time_us = 2;
  required float integrated_x = 3;
  required float integrated_y = 4;
  required float integrated_xgyro = 5;
  required float integrated_ygyro = 6;
  required float integrated_zgyro = 7;
  required uint32 time_delta_distance_us = 8;
  required float distance = 9;
  required int32 temperature = 10;
  required uint32 sensor_id = 11;
  required uint32 quality = 12;
}
// id: 107 HilSensor
message HilSensor {
  required uint64 time_usec = 1;
  required float xacc = 2;
  required float yacc = 3;
  required float zacc = 4;
  required float xgyro = 5;
  required float ygyro = 6;
  required float zgyro = 7;
  required float xmag = 8;
  required float ymag = 9;
  required float zmag = 10;
  required float abs_pressure = 11;
  required float diff_pressure = 12;
  required float pressure_alt = 13;
  required float temperature = 14;
  required uint32 fields_updated = 15;
}
// id: 108 SimState
message SimState {
  required float q1 = 1;
  required float q2 = 2;
  required float q3 = 3;
  required float q4 = 4;
  required float roll = 5;
  required float pitch = 6;
  required float yaw = 7;
  required float xacc = 8;
  required float yacc = 9;
  required float zacc = 10;
  required float xgyro = 11;
  required float ygyro = 12;
  required float zgyro = 13;
  required float lat = 14;
  required float lon = 15;
  required float alt = 16;
  required float std_dev_horz = 17;
  required float std_dev_vert = 18;
  required float vn = 19;
  required float ve = 20;
  required float vd = 21;
}
// id: 109 RadioStatus
message RadioStatus {
  required uint32 rxerrors = 1;
  required uint32 fixed = 2;
  required uint32 rssi = 3;
  required uint32 remrssi = 4;
  required uint32 txbuf = 5;
  required uint32 noise = 6;
  required uint32 remnoise = 7;
}
// id: 110 FileTransferProtocol
message FileTransferProtocol {
  required uint32 target_network = 1;
  required uint32 target_system = 2;
  required uint32 target_component = 3;
  repeated bytes payload = 4;
}
// id: 111 Timesync
message Timesync {
  required int64 tc1 = 1;
  required int64 ts1 = 2;
}
// id: 112 CameraTrigger
message CameraTrigger {
  required uint64 time_usec = 1;
  required uint32 seq = 2;
}
// id: 113 HilGps
message HilGps {
  required uint64 time_usec = 1;
  required int32 lat = 2;
  required int32 lon = 3;
  required int32 alt = 4;
  required uint32 eph = 5;
  required uint32 epv = 6;
  required uint32 vel = 7;
  required int32 vn = 8;
  required int32 ve = 9;
  required int32 vd = 10;
  required uint32 cog = 11;
  required uint32 fix_type = 12;
  required uint32 satellites_visible = 13;
}
// id: 114 HilOpticalFlow
message HilOpticalFlow {
  required uint64 time_usec = 1;
  required uint32 integration_time_us = 2;
  required float integrated_x = 3;
  required float integrated_y = 4;
  required float integrated_xgyro = 5;
  required float integrated_ygyro = 6;
  required float integrated_zgyro = 7;
  required uint32 time_delta_distance_us = 8;
  required float distance = 9;
  required int32 temperature = 10;
  required uint32 sensor_id = 11;
  required uint32 quality = 12;
}
// id: 115 HilStateQuaternion
message HilStateQuaternion {
  required uint64 time_usec = 1;
  repeated float attitude_quaternion = 2;
  required float rollspeed = 3;
  required float pitchspeed = 4;
  required float yawspeed = 5;
  required int32 lat = 6;
  required int32 lon = 7;
  required int32 alt = 8;
  required int32 vx = 9;
  required int32 vy = 10;
  required int32 vz = 11;
  required uint32 ind_airspeed = 12;
  required uint32 true_airspeed = 13;
  required int32 xacc = 14;
  required int32 yacc = 15;
  required int32 zacc = 16;
}
// id: 116 ScaledImu2
message ScaledImu2 {
  required uint32 time_boot_ms = 1;
  required int32 xacc = 2;
  required int32 yacc = 3;
  required int32 zacc = 4;
  required int32 xgyro = 5;
  required int32 ygyro = 6;
  required int32 zgyro = 7;
  required int32 xmag = 8;
  required int32 ymag = 9;
  required int32 zmag = 10;
}
// id: 117 LogRequestList
message LogRequestList {
  required uint32 start = 1;
  required uint32 end = 2;
  required uint32 target_system = 3;
  required uint32 target_component = 4;
}
// id: 118 LogEntry
message LogEntry {
  required uint32 time_utc = 1;
  required uint32 size = 2;
  required uint32 id = 3;
  required uint32 num_logs = 4;
  required uint32 last_log_num = 5;
}
// id: 119 LogRequestData
message LogRequestData {
  required uint32 ofs = 1;
  required uint32 count = 2;
  required uint32 id = 3;
  required uint32 target_system = 4;
  required uint32 target_component = 5;
}
// id: 120 LogData
message LogData {
  required uint32 ofs = 1;
  required uint32 id = 2;
  required uint32 count = 3;
  repeated bytes data = 4;
}
// id: 121 LogErase
message LogErase {
  required uint32 target_system = 1;
  required uint32 target_component = 2;
}
// id: 122 LogRequestEnd
message LogRequestEnd {
  required uint32 target_system = 1;
  required uint32 target_component = 2;
}
// id: 123 GpsInjectData
message GpsInjectData {
  required uint32 target_system = 1;
  required uint32 target_component = 2;
  required uint32 len = 3;
  repeated bytes data = 4;
}
// id: 124 Gps2Raw
message Gps2Raw {
  required uint64 time_usec = 1;
  required int32 lat = 2;
  required int32 lon = 3;
  required int32 alt = 4;
  required uint32 dgps_age = 5;
  required uint32 eph = 6;
  required uint32 epv = 7;
  required uint32 vel = 8;
  required uint32 cog = 9;
  required uint32 fix_type = 10;
  required uint32 satellites_visible = 11;
  required uint32 dgps_numch = 12;
}
// id: 125 PowerStatus
message PowerStatus {
  required uint32 Vcc = 1;
  required uint32 Vservo = 2;
  required uint32 flags = 3;
}
// id: 126 SerialControl
message SerialControl {
  required uint32 baudrate = 1;
  required uint32 timeout = 2;
  required uint32 device = 3;
  required uint32 flags = 4;
  required uint32 count = 5;
  repeated bytes data = 6;
}
// id: 127 GpsRtk
message GpsRtk {
  required uint32 time_last_baseline_ms = 1;
  required uint32 tow = 2;
  required int32 baseline_a_mm = 3;
  required int32 baseline_b_mm = 4;
  required int32 baseline_c_mm = 5;
  required uint32 accuracy = 6;
  required int32 iar_num_hypotheses = 7;
  required uint32 wn = 8;
  required uint32 rtk_receiver_id = 9;
  required uint32 rtk_health = 10;
  required uint32 rtk_rate = 11;
  required uint32 nsats = 12;
  required uint32 baseline_coords_type = 13;
}
// id: 128 Gps2Rtk
message Gps2Rtk {
  required uint32 time_last_baseline_ms = 1;
  required uint32 tow = 2;
  required int32 baseline_a_mm = 3;
  required int32 baseline_b_mm = 4;
  required int32 baseline_c_mm = 5;
  required uint32 accuracy = 6;
  required int32 iar_num_hypotheses = 7;
  required uint32 wn = 8;
  required uint32 rtk_receiver_id = 9;
  required uint32 rtk_health = 10;
  required uint32 rtk_rate = 11;
  required uint32 nsats = 12;
  required uint32 baseline_coords_type = 13;
}
// id: 129 ScaledImu3
message ScaledImu3 {
  required uint32 time_boot_ms = 1;
  required int32 xacc = 2;
  required int32 yacc = 3;
  required int32 zacc = 4;
  required int32 xgyro = 5;
  required int32 ygyro = 6;
  required int32 zgyro = 7;
  required int32 xmag = 8;
  required int32 ymag = 9;
  required int32 zmag = 10;
}
// id: 130 DataTransmissionHandshake
message DataTransmissionHandshake {
  required uint32 size = 1;
  required uint32 width = 2;
  required uint32 height = 3;
  required uint32 packets = 4;
  required uint32 mavtype = 5;
  required uint32 payload = 6;
  required uint32 jpg_quality = 7;
}
// id: 131 EncapsulatedData
message EncapsulatedData {
  required uint32 seqnr = 1;
  repeated bytes data = 2;
}
// id: 132 DistanceSensor
message DistanceSensor {
  required uint32 time_boot_ms = 1;
  required uint32 min_distance = 2;
  required uint32 max_distance = 3;
  required uint32 current_distance = 4;
  required uint32 mavtype = 5;
  required uint32 id = 6;
  required uint32 orientation = 7;
  required uint32 covariance = 8;
}
// id: 133 TerrainRequest
message TerrainRequest {
  required uint64 mask = 1;
  required int32 lat = 2;
  required int32 lon = 3;
  required uint32 grid_spacing = 4;
}
// id: 134 TerrainData
message TerrainData {
  required int32 lat = 1;
  required int32 lon = 2;
  required uint32 grid_spacing = 3;
  repeated int32 data = 4;
  required uint32 gridbit = 5;
}
// id: 135 TerrainCheck
message TerrainCheck {
  required int32 lat = 1;
  required int32 lon = 2;
}
// id: 136 TerrainReport
message TerrainReport {
  required int32 lat = 1;
  required int32 lon = 2;
  required float terrain_height = 3;
  required float current_height = 4;
  required uint32 spacing = 5;
  required uint32 pending = 6;
  required uint32 loaded = 7;
}
// id: 137 ScaledPressure2
message ScaledPressure2 {
  required uint32 time_boot_ms = 1;
  required float press_abs = 2;
  required float press_diff = 3;
  required int32 temperature = 4;
}
// id: 138 AttPosMocap
message AttPosMocap {
  required uint64 time_usec = 1;
  repeated float q = 2;
  required float x = 3;
  required float y = 4;
  required float z = 5;
}
// id: 139 SetActuatorControlTarget
message SetActuatorControlTarget {
  required uint64 time_usec = 1;
  repeated float controls = 2;
  required uint32 group_mlx = 3;
  required uint32 target_system = 4;
  required uint32 target_component = 5;
}
// id: 140 ActuatorControlTarget
message ActuatorControlTarget {
  required uint64 time_usec = 1;
  repeated float controls = 2;
  required uint32 group_mlx = 3;
}
// id: 141 Altitude
message Altitude {
  required uint64 time_usec = 1;
  required float altitude_monotonic = 2;
  required float altitude_amsl = 3;
  required float altitude_local = 4;
  required float altitude_relative = 5;
  required float altitude_terrain = 6;
  required float bottom_clearance = 7;
}
// id: 142 ResourceRequest
message ResourceRequest {
  required uint32 request_id = 1;
  required uint32 uri_type = 2;
  repeated bytes uri = 3;
  required uint32 transfer_type = 4;
  repeated bytes storage = 5;
}
// id: 143 ScaledPressure3
message ScaledPressure3 {
  required uint32 time_boot_ms = 1;
  required float press_abs = 2;
  required float press_diff = 3;
  required int32 temperature = 4;
}
// id: 146 ControlSystemState
message ControlSystemState {
  required uint64 time_usec = 1;
  required float x_acc = 2;
  required float y_acc = 3;
  required float z_acc = 4;
  required float x_vel = 5;
  required float y_vel = 6;
  required float z_vel = 7;
  required float x_pos = 8;
  required float y_pos = 9;
  required float z_pos = 10;
  required float airspeed = 11;
  repeated float vel_variance = 12;
  repeated float pos_variance = 13;
  repeated float q = 14;
  required float roll_rate = 15;
  required float pitch_rate = 16;
  required float yaw_rate = 17;
}
// id: 147 BatteryStatus
message BatteryStatus {
  required int32 current_consumed = 1;
  required int32 energy_consumed = 2;
  required int32 temperature = 3;
  repeated uint32 voltages = 4;
  required int32 current_battery = 5;
  required uint32 id = 6;
  required uint32 battery_function = 7;
  required uint32 mavtype = 8;
  required int32 battery_remaining = 9;
}
// id: 148 AutopilotVersion
message AutopilotVersion {
  required uint64 capabilities = 1;
  required uint64 uid = 2;
  required uint32 flight_sw_version = 3;
  required uint32 middleware_sw_version = 4;
  required uint32 os_sw_version = 5;
  required uint32 board_version = 6;
  required uint32 vendor_id = 7;
  required uint32 product_id = 8;
  repeated bytes flight_custom_version = 9;
  repeated bytes middleware_custom_version = 10;
  repeated bytes os_custom_version = 11;
}
// id: 149 LandingTarget
message LandingTarget {
  required uint64 time_usec = 1;
  required float angle_x = 2;
  required float angle_y = 3;
  required float distance = 4;
  required float size_x = 5;
  required float size_y = 6;
  required uint32 target_num = 7;
  required uint32 frame = 8;
}
// id: 241 Vibration
message Vibration {
  required uint64 time_usec = 1;
  required float vibration_x = 2;
  required float vibration_y = 3;
  required float vibration_z = 4;
  required uint32 clipping_0 = 5;
  required uint32 clipping_1 = 6;
  required uint32 clipping_2 = 7;
}
// id: 242 HomePosition
message HomePosition {
  required int32 latitude = 1;
  required int32 longitude = 2;
  required int32 altitude = 3;
  required float x = 4;
  required float y = 5;
  required float z = 6;
  repeated float q = 7;
  required float approach_x = 8;
  required float approach_y = 9;
  required float approach_z = 10;
}
// id: 243 SetHomePosition
message SetHomePosition {
  required int32 latitude = 1;
  required int32 longitude = 2;
  required int32 altitude = 3;
  required float x = 4;
  required float y = 5;
  required float z = 6;
  repeated float q = 7;
  required float approach_x = 8;
  required float approach_y = 9;
  required float approach_z = 10;
  required uint32 target_system = 11;
}
// id: 244 MessageInterval
message MessageInterval {
  required int32 interval_us = 1;
  required uint32 message_id = 2;
}
// id: 245 ExtendedSysState
message ExtendedSysState {
  required uint32 vtol_state = 1;
  required uint32 landed_state = 2;
}
// id: 246 AdsbVehicle
message AdsbVehicle {
  required uint32 ICAO_address = 1;
  required int32 lat = 2;
  required int32 lon = 3;
  required float altitude = 4;
  required float hor_velocity = 5;
  required float ver_velocity = 6;
  required uint32 heading = 7;
  required uint32 flags = 8;
  required uint32 squawk = 9;
  required uint32 altitude_type = 10;
  repeated bytes callsign = 11;
  required uint32 emitter_type = 12;
  required uint32 tslc = 13;
}
// id: 248 V2Extension
message V2Extension {
  required uint32 message_type = 1;
  required uint32 target_network = 2;
  required uint32 target_system = 3;
  required uint32 target_component = 4;
  repeated bytes payload = 5;
}
// id: 249 MemoryVect
message MemoryVect {
  required uint32 address = 1;
  required uint32 ver = 2;
  required uint32 mavtype = 3;
  repeated bytes value = 4;
}
// id: 250 DebugVect
message DebugVect {
  required uint64 time_usec = 1;
  required float x = 2;
  required float y = 3;
  required float z = 4;
  repeated bytes name = 5;
}
// id: 251 NamedValueFloat
message NamedValueFloat {
  required uint32 time_boot_ms = 1;
  required float value = 2;
  repeated bytes name = 3;
}
// id: 252 NamedValueInt
message NamedValueInt {
  required uint32 time_boot_ms = 1;
  required int32 value = 2;
  repeated bytes name = 3;
}
// id: 253 Statustext
message Statustext {
  required uint32 severity = 1;
  repeated bytes text = 2;
}
// id: 254 Debug
message Debug {
  required uint32 time_boot_ms = 1;
  required float value = 2;
  required uint32 ind = 3;
}
message MavlinkMessage {
  oneof msg_set {
    Heartbeat heartbeat = 1;
    SysStatus sysstatus = 2;
    SystemTime systemtime = 3;
    Ping ping = 4;
    ChangeOperatorControl changeoperatorcontrol = 5;
    ChangeOperatorControlAck changeoperatorcontrolack = 6;
    AuthKey authkey = 7;
    SetMode setmode = 8;
    ParamRequestRead paramrequestread = 9;
    ParamRequestList paramrequestlist = 10;
    ParamValue paramvalue = 11;
    ParamSet paramset = 12;
    GpsRawInt gpsrawint = 13;
    GpsStatus gpsstatus = 14;
    ScaledImu scaledimu = 15;
    RawImu rawimu = 16;
    RawPressure rawpressure = 17;
    ScaledPressure scaledpressure = 18;
    Attitude attitude = 19;
    AttitudeQuaternion attitudequaternion = 20;
    LocalPositionNed localpositionned = 21;
    GlobalPositionInt globalpositionint = 22;
    RcChannelsScaled rcchannelsscaled = 23;
    RcChannelsRaw rcchannelsraw = 24;
    ServoOutputRaw servooutputraw = 25;
    MissionRequestPartialList missionrequestpartiallist = 26;
    MissionWritePartialList missionwritepartiallist = 27;
    MissionItem missionitem = 28;
    MissionRequest missionrequest = 29;
    MissionSetCurrent missionsetcurrent = 30;
    MissionCurrent missioncurrent = 31;
    MissionRequestList missionrequestlist = 32;
    MissionCount missioncount = 33;
    MissionClearAll missionclearall = 34;
    MissionItemReached missionitemreached = 35;
    MissionAck missionack = 36;
    SetGpsGlobalOrigin setgpsglobalorigin = 37;
    GpsGlobalOrigin gpsglobalorigin = 38;
    ParamMapRc parammaprc = 39;
    SafetySetAllowedArea safetysetallowedarea = 40;
    SafetyAllowedArea safetyallowedarea = 41;
    AttitudeQuaternionCov attitudequaternioncov = 42;
    NavControllerOutput navcontrolleroutput = 43;
    GlobalPositionIntCov globalpositionintcov = 44;
    LocalPositionNedCov localpositionnedcov = 45;
    RcChannels rcchannels = 46;
    RequestDataStream requestdatastream = 47;
    DataStream datastream = 48;
    ManualControl manualcontrol = 49;
    RcChannelsOverride rcchannelsoverride = 50;
    MissionItemInt missionitemint = 51;
    VfrHud vfrhud = 52;
    CommandInt commandint = 53;
    CommandLong commandlong = 54;
    CommandAck commandack = 55;
    ManualSetpoint manualsetpoint = 56;
    SetAttitudeTarget setattitudetarget = 57;
    AttitudeTarget attitudetarget = 58;
    SetPositionTargetLocalNed setpositiontargetlocalned = 59;
    PositionTargetLocalNed positiontargetlocalned = 60;
    SetPositionTargetGlobalInt setpositiontargetglobalint = 61;
    PositionTargetGlobalInt positiontargetglobalint = 62;
    LocalPositionNedSystemGlobalOffset localpositionnedsystemglobaloffset = 63;
    HilState hilstate = 64;
    HilControls hilcontrols = 65;
    HilRcInputsRaw hilrcinputsraw = 66;
    OpticalFlow opticalflow = 67;
    GlobalVisionPositionEstimate globalvisionpositionestimate = 68;
    VisionPositionEstimate visionpositionestimate = 69;
    VisionSpeedEstimate visionspeedestimate = 70;
    ViconPositionEstimate viconpositionestimate = 71;
    HighresImu highresimu = 72;
    OpticalFlowRad opticalflowrad = 73;
    HilSensor hilsensor = 74;
    SimState simstate = 75;
    RadioStatus radiostatus = 76;
    FileTransferProtocol filetransferprotocol = 77;
    Timesync timesync = 78;
    CameraTrigger cameratrigger = 79;
    HilGps hilgps = 80;
    HilOpticalFlow hilopticalflow = 81;
    HilStateQuaternion hilstatequaternion = 82;
    ScaledImu2 scaledimu2 = 83;
    LogRequestList logrequestlist = 84;
    LogEntry logentry = 85;
    LogRequestData logrequestdata = 86;
    LogData logdata = 87;
    LogErase logerase = 88;
    LogRequestEnd logrequestend = 89;
    GpsInjectData gpsinjectdata = 90;
    Gps2Raw gps2raw = 91;
    PowerStatus powerstatus = 92;
    SerialControl serialcontrol = 93;
    GpsRtk gpsrtk = 94;
    Gps2Rtk gps2rtk = 95;
    ScaledImu3 scaledimu3 = 96;
    DataTransmissionHandshake datatransmissionhandshake = 97;
    EncapsulatedData encapsulateddata = 98;
    DistanceSensor distancesensor = 99;
    TerrainRequest terrainrequest = 100;
    TerrainData terraindata = 101;
    TerrainCheck terraincheck = 102;
    TerrainReport terrainreport = 103;
    ScaledPressure2 scaledpressure2 = 104;
    AttPosMocap attposmocap = 105;
    SetActuatorControlTarget setactuatorcontroltarget = 106;
    ActuatorControlTarget actuatorcontroltarget = 107;
    Altitude altitude = 108;
    ResourceRequest resourcerequest = 109;
    ScaledPressure3 scaledpressure3 = 110;
    ControlSystemState controlsystemstate = 111;
    BatteryStatus batterystatus = 112;
    AutopilotVersion autopilotversion = 113;
    LandingTarget landingtarget = 114;
    Vibration vibration = 115;
    HomePosition homeposition = 116;
    SetHomePosition sethomeposition = 117;
    MessageInterval messageinterval = 118;
    ExtendedSysState extendedsysstate = 119;
    AdsbVehicle adsbvehicle = 120;
    V2Extension v2extension = 121;
    MemoryVect memoryvect = 122;
    DebugVect debugvect = 123;
    NamedValueFloat namedvaluefloat = 124;
    NamedValueInt namedvalueint = 125;
    Statustext statustext = 126;
    Debug debug = 127;
  }
}
